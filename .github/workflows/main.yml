name: CICD
on:
  push:
    branches:
      master
  pull_request:

env:
  NODE_VERSION: 14

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        id: node-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        id: cache-restore
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
      - name: Install dependencies
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: yarn
  lint:
    runs-on: ubuntu-latest
    name: Lint
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        id: node-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache-restore
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
      - name: Lint
        run: |
          yarn
          yarn lint
  test:
    runs-on: ubuntu-latest
    name: Test
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        id: node-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache-restore
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
      - name: Tests
        run: |
          yarn
          yarn coverage
          yarn coveralls
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        id: node-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache-restore
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
      - run: |
          yarn
          yarn build
      - name: Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: dist
  release:
    runs-on: ubuntu-latest
    name: Release
    needs:
      - build
      - test
      - lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        id: node-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache-restore
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
      - name: Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: dist
      - name: Release (dry)
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          yarn
          yarn semantic-release --ci --dry-run
      - name: Release
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn
          yarn semantic-release --ci
  website-deploy:
    runs-on: ubuntu-latest
    name: Website deploy
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        id: node-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache-restore
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
      - name: Deploy (dry)
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          yarn
          yarn deploy:dryrun
      - name: Deploy
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          GH_TOKEN: ${{ github.actor }}:${{ secrets.GH_TOKEN }}
        run: |
          yarn
          yarn deploy
